<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.trsystem.mybatis.mapper.batchMapper">
	
	<!-- MM 업데이트 -->
	<insert id = "executeCostUpdateMM" >
		INSERT INTO MMNY_LBRCO_EXCN (PRJCT_ID, EMP_ID, INPT_YM, MM, GIVE_CT)
		SELECT IND.PRJCT_ID,
			   IND.EMP_ID,
			   IND.APLY_YM AS INPT_YM,
			   CASE
				   WHEN (SUM(MP.MD)+Z.VAC_TIME) /T.COUNT_DAYS > 1 THEN 1
				   ELSE (SUM(MP.MD)+Z.VAC_TIME) /T.COUNT_DAYS
				   END  AS MM,
			   MP.UNTPC * (CASE
							   WHEN (SUM(MP.MD)+Z.VAC_TIME) /T.COUNT_DAYS > 1 THEN 1
							   ELSE (SUM(MP.MD)+Z.VAC_TIME) /T.COUNT_DAYS
				   END) AS GIVE_CT
		FROM PRJCT_INDVDL_CT_MM IND
				 JOIN PRJCT_MM_APLY MP ON IND.PRJCT_ID = MP.PRJCT_ID AND IND.EMP_ID = MP.EMP_ID AND IND.APLY_YM = MP.APLY_YM AND IND.APLY_ODR = MP.APLY_ODR
				 JOIN PRJCT_MM_ATRZ MT ON IND.PRJCT_ID = MT.PRJCT_ID AND IND.EMP_ID = MT.EMP_ID AND IND.APLY_YM = MT.APLY_YM AND IND.APLY_ODR = MT.APLY_ODR
			AND MP.APLY_YMD = MT.APLY_YMD
				 JOIN (SELECT SUBSTRING(CRTR_YMD, 1, 6) AS APLY_YM ,COUNT(*) AS COUNT_DAYS FROM CRTR_DATE cd2 WHERE HLDY_CL_CD = 'VTW05001' GROUP BY SUBSTRING(CRTR_YMD, 1, 6)) T
					  ON IND.APLY_YM  = T.APLY_YM
				 JOIN (SELECT E.PRJCT_ID, SUBSTR(CC.CRTR_YMD, 1,6) AS APLY_YM , E.ATRZ_DMND_EMP_ID,
							  SUM(CASE
									  WHEN V.VCATN_TY_CD IN ('VTW01202', 'VTW01203', 'VTW01204', 'VTW01205') THEN 0.5
									  ELSE 1
								  END) AS VAC_TIME
					   FROM CRTR_DATE CC
								JOIN VCATN_ATRZ V ON CC.CRTR_YMD BETWEEN V.VCATN_BGNG_YMD AND V.VCATN_END_YMD AND CC.HLDY_CL_CD = 'VTW05001'
								JOIN ELCTRN_ATRZ E ON V.ELCTRN_ATRZ_ID = E.ELCTRN_ATRZ_ID
					   WHERE E.ATRZ_DMND_STTS_CD = 'VTW03703'
					   GROUP BY E.PRJCT_ID, SUBSTR(CC.CRTR_YMD, 1,6), E.ATRZ_DMND_EMP_ID
		) Z ON IND.PRJCT_ID = Z.PRJCT_ID AND IND.EMP_ID = Z.ATRZ_DMND_EMP_ID AND IND.APLY_YM = Z.APLY_YM
		GROUP BY IND.PRJCT_ID, IND.EMP_ID, IND.APLY_YM, UNTPC
		ON DUPLICATE KEY UPDATE MM = VALUES(MM), GIVE_CT = VALUES(GIVE_CT)
	</insert>
	
	<!-- CT(경비) 업데이트 -->
	<insert id = "executeCostUpdateCT" >
		INSERT INTO EXPENS_EXCN (PRJCT_ID, EXPENS_CD, INPT_YM, EXPENS_CT)
		SELECT PRJCT_ID, EXPENS_CD, INPT_YM, SUM(EXPENS_CT) AS EXPENS_CT
		FROM(SELECT CP.PRJCT_ID
				  ,CP.EXPENS_CD
				  ,CP.APLY_YM  AS INPT_YM
				  ,CP.UTZTN_AMT AS EXPENS_CT
			 FROM  PRJCT_CT_APLY CP
					   JOIN PRJCT_CT_ATRZ CT ON (CP.PRJCT_ID=CT.PRJCT_ID AND CP.EMP_ID = CT.EMP_ID AND CP.APLY_YM = CT.APLY_YM AND CP.APLY_ODR = CT.APLY_ODR AND CP.PRJCT_CT_APLY_SN = CT.PRJCT_CT_APLY_SN)
			 WHERE 1=1
			   AND CT.ATRZ_DMND_STTS_CD = "VTW03703"
			   AND CP.ELCTRN_ATRZ_ID IS NULL
			 UNION ALL
			 SELECT E.PRJCT_ID , CA.EXPENS_CD , SUBSTR(CA.RCIPT_PBLCN_YMD, 1, 6) AS INPT_YM, CA.CLM_AMT AS EXPENS_CT
			 FROM ELCTRN_ATRZ E
					  JOIN CLM_ATRZ C ON E.ELCTRN_ATRZ_ID = C.ELCTRN_ATRZ_ID AND E.ELCTRN_ATRZ_TY_SE_CD = 'VTW04907' AND E.ATRZ_DMND_STTS_CD ='VTW03703'
					  JOIN CLM_ATRZ_DTL CA ON C.ELCTRN_ATRZ_ID = CA.ELCTRN_ATRZ_ID
			 WHERE CLM_AMT !=0) T
		GROUP BY PRJCT_ID, EXPENS_CD, INPT_YM
		ON DUPLICATE KEY UPDATE EXPENS_CT = VALUES(EXPENS_CT)	
	</insert>
	
	<!-- 재료비 업데이트 -->
	<insert id = "executeCostUpdateMatralCt">
		INSERT INTO MATRL_CT_EXCN (PRJCT_ID, MATRL_CT_SN, MATRL_CT_IEM_CD, PRDUCT_NM, QY, USE_AMT)
		SELECT
			EA.PRJCT_ID,
			CTRT.ENTRPS_CT_PRMPC_SN AS MATRL_CT_SN,
			CTRT.MATRL_CT_IEM_CD,
			CTRT.PRDUCT_NM,
			CTRT.QY,
			CTRT.GIVE_AMT AS USE_AMT
		FROM ELCTRN_ATRZ EA
				 JOIN (
			SELECT CA.ELCTRN_ATRZ_ID, CA.CTRT_KND_CD,M.MATRL_CT_IEM_CD , CD.PRDUCT_NM, CD.ENTRPS_CT_PRMPC_SN, CD.QY, SUM(AD.GIVE_AMT) AS GIVE_AMT
			FROM ELCTRN_ATRZ E
					 JOIN CTRT_GIVE_ATRZ A ON E.ELCTRN_ATRZ_ID = A.ELCTRN_ATRZ_ID
					 JOIN CTRT_GIVE_ATRZ_DTL AD ON A.ELCTRN_ATRZ_ID  = AD.ELCTRN_ATRZ_ID
					 JOIN CTRT_ATRZ CA ON AD.CTRT_ELCTRN_ATRZ_ID  = CA.ELCTRN_ATRZ_ID
					 JOIN ENTRPS_CTRT_DTL CD ON CA.ELCTRN_ATRZ_ID = CD.ELCTRN_ATRZ_ID
					 JOIN MATRL_CT_PRMPC M ON M.PRJCT_ID = E.PRJCT_ID AND AD.ENTRPS_CTRT_DTL_SN = M.MATRL_CT_SN
			WHERE 1=1
			  AND CA.CTRT_KND_CD = 'VTW04403'
			GROUP BY CA.ELCTRN_ATRZ_ID, CA.CTRT_KND_CD, M.MATRL_CT_IEM_CD,CD.PRDUCT_NM, CD.ENTRPS_CT_PRMPC_SN, CD.QY
		) CTRT ON EA.ELCTRN_ATRZ_ID = CTRT.ELCTRN_ATRZ_ID
		WHERE EA.ATRZ_DMND_STTS_CD ='VTW03703'
	ON DUPLICATE KEY UPDATE USE_AMT = VALUES(USE_AMT), QY = VALUES(QY)
	</insert>
	
	<!-- 외주업체 업데이트 -->
	<insert id = "executeCostUpdateOutordEntrpsCt">
		INSERT INTO OUTORD_ENTRPS_CT_EXCN (PRJCT_ID, OUTORD_ENTRPS_CT_PRMPC_SN, OUTORD_ENTRPS_NM, GIVE_CT)
		SELECT 
			   EA.PRJCT_ID,
			   CTRT.ENTRPS_CTRT_DTL_SN AS OUTORD_ENTRPS_CT_PRMPC_SN,
			   CTRT.PRDUCT_NM AS OUTORD_ENTRPS_NM,
			   CTRT.GIVE_AMT AS GIVE_CT
		FROM ELCTRN_ATRZ EA
		JOIN (
			SELECT CA.ELCTRN_ATRZ_ID, CA.CTRT_KND_CD, CD.PRDUCT_NM, CD.ENTRPS_CTRT_DTL_SN, CD.QY, SUM(AD.GIVE_AMT) AS GIVE_AMT 
			FROM CTRT_GIVE_ATRZ A
			JOIN CTRT_GIVE_ATRZ_DTL AD ON A.ELCTRN_ATRZ_ID  = AD.ELCTRN_ATRZ_ID
			JOIN CTRT_ATRZ CA ON A.CTRT_ELCTRN_ATRZ_ID  = CA.ELCTRN_ATRZ_ID 
			LEFT JOIN ENTRPS_CTRT_DTL CD ON CA.ELCTRN_ATRZ_ID = CD.ELCTRN_ATRZ_ID  
			WHERE 1=1
			AND CA.CTRT_KND_CD = 'VTW04402'
			GROUP BY CA.ELCTRN_ATRZ_ID, CD.ENTRPS_CTRT_DTL_SN
		) CTRT ON EA.ELCTRN_ATRZ_ID = CTRT.ELCTRN_ATRZ_ID
		WHERE EA.ATRZ_DMND_STTS_CD ='VTW03703'
	ON DUPLICATE KEY UPDATE GIVE_CT = VALUES(GIVE_CT)
	</insert>
	
	<!-- 외주인력 업데이트 -->
	<insert id = "executeCostUpdateOutordLbrcoCt">
		INSERT INTO OUTORD_LBRCO_EXCN (PRJCT_ID, OUTORD_EMP_ID, INPT_YM, MM, GIVE_CT)
		SELECT 
			   EA.PRJCT_ID,
			   CTRT.EXPECT_INPT_HNF_ID AS OUTORD_EMP_ID,
			   CTRT.GIVE_YMD AS INPT_YM,
			   CTRT.MM,
			   CTRT.GIVE_AMT AS GIVE_CT
		FROM ELCTRN_ATRZ EA
		JOIN (
			SELECT HCD.MM, 
				   HCD.EXPECT_INPT_HNF_ID, 
				   A.GIVE_YMD, 
				   A.ELCTRN_ATRZ_ID, 
				   AD.OUTORD_LBRCO_PRMPC_SN, 
				   SUM(AD.GIVE_AMT) AS GIVE_AMT
				FROM CTRT_GIVE_ATRZ A
				JOIN CTRT_GIVE_ATRZ_DTL AD ON A.ELCTRN_ATRZ_ID  = AD.ELCTRN_ATRZ_ID
				JOIN CTRT_ATRZ CA ON A.CTRT_ELCTRN_ATRZ_ID  = CA.ELCTRN_ATRZ_ID 
				LEFT JOIN (
					SELECT 
						HM.INPT_YM, 
						HM.MM,
						H.ELCTRN_ATRZ_ID,
						H.EXPECT_INPT_HNF_ID, 
						H.OUTORD_LBRCO_PRMPC_SN 
					FROM HNF_CTRT_DTL H
					JOIN HNF_CTRT_DTL_MM HM ON H.ELCTRN_ATRZ_ID = HM.ELCTRN_ATRZ_ID AND H.INPT_HNF_ID = HM.INPT_HNF_ID 
					) HCD
					ON CA.ELCTRN_ATRZ_ID = HCD.ELCTRN_ATRZ_ID  AND DATE_FORMAT(A.GIVE_YMD,'%Y%m') = HCD.INPT_YM AND HCD.OUTORD_LBRCO_PRMPC_SN = AD.OUTORD_LBRCO_PRMPC_SN
				WHERE CA.CTRT_KND_CD ='VTW04401'
				GROUP BY HCD.MM, 
					    HCD.EXPECT_INPT_HNF_ID, 
					    A.GIVE_YMD, 
					    A.ELCTRN_ATRZ_ID, 
					    AD.OUTORD_LBRCO_PRMPC_SN
			) CTRT ON EA.ELCTRN_ATRZ_ID = CTRT.ELCTRN_ATRZ_ID
		WHERE EA.ATRZ_DMND_STTS_CD ='VTW03703'
          AND CTRT.EXPECT_INPT_HNF_ID IS NOT NULL
		ON DUPLICATE KEY UPDATE GIVE_CT = VALUES(GIVE_CT), MM = VALUES(MM)
	</insert>
	
	
	<!-- MM -->
	<!-- 임시 테이블 생성 -->
    <update id="createTempTableMM">
        CREATE TEMPORARY TABLE tmp_delete_keys_mm (PRJCT_ID VARCHAR(50), EMP_ID VARCHAR(50), INPT_YM VARCHAR(8))
    </update>
    
    <!-- 임시 테이블에 데이터 삽입 -->
    <insert id="insertIntoTempTableMM">
        INSERT INTO tmp_delete_keys_mm (PRJCT_ID, EMP_ID, INPT_YM)
        SELECT EXCN.PRJCT_ID, EXCN.EMP_ID, EXCN.INPT_YM
        FROM MMNY_LBRCO_EXCN EXCN
        LEFT JOIN (
            SELECT IND.PRJCT_ID, IND.EMP_ID, IND.APLY_YM
            FROM PRJCT_INDVDL_CT_MM IND
            JOIN PRJCT_MM_APLY MP ON (IND.PRJCT_ID=MP.PRJCT_ID AND IND.EMP_ID = MP.EMP_ID AND IND.APLY_YM = MP.APLY_YM AND IND.APLY_ODR = MP.APLY_ODR)
            JOIN PRJCT_MM_ATRZ MT ON (MP.PRJCT_ID=MT.PRJCT_ID AND MP.EMP_ID = MT.EMP_ID AND MP.APLY_YM = MT.APLY_YM AND MP.APLY_ODR = MT.APLY_ODR AND MP.APLY_YMD = MT.APLY_YMD)
            LEFT JOIN (SELECT SUBSTRING(CRTR_YMD, 1, 6) AS APLY_YM,
                              COUNT(*) AS COUNT_DAYS
                         FROM CRTR_DATE cd2 
                         WHERE HLDY_CL_CD ='VTW05001'
                         GROUP BY SUBSTRING(CRTR_YMD, 1, 6)
                        ) AS D
            ON IND.APLY_YM = D.APLY_YM
            WHERE 1=1
            AND MT.ATRZ_DMND_STTS_CD = "VTW03703"
        ) AS NEW_DATA
        ON EXCN.PRJCT_ID = NEW_DATA.PRJCT_ID AND EXCN.EMP_ID = NEW_DATA.EMP_ID AND EXCN.INPT_YM = NEW_DATA.APLY_YM
        WHERE NEW_DATA.PRJCT_ID IS NULL
    </insert>
    
    <!-- 임시 테이블을 사용하여 삭제 -->
    <delete id="deleteFromMainTableMM">
        DELETE FROM MMNY_LBRCO_EXCN
        WHERE (PRJCT_ID, EMP_ID, INPT_YM) IN (
            SELECT PRJCT_ID, EMP_ID, INPT_YM FROM tmp_delete_keys_mm
        )
    </delete>
    
    <!-- 임시 테이블 삭제 -->
    <update id="dropTempTableMM">
        DROP TEMPORARY TABLE tmp_delete_keys_mm
    </update>
    
    <!-- CT 경비 -->
    <!-- 임시 테이블 생성 -->
    <update id="createTempTableCT">
        CREATE TEMPORARY TABLE tmp_delete_keys_ct (PRJCT_ID VARCHAR(50), EXPENS_CD VARCHAR(8), INPT_YM VARCHAR(8))
    </update>
    
    <!-- 임시 테이블에 데이터 삽입 -->
    <insert id="insertIntoTempTableCT">
        INSERT INTO tmp_delete_keys_ct (PRJCT_ID, EXPENS_CD, INPT_YM)
        SELECT EXCN.PRJCT_ID, EXCN.EXPENS_CD, EXCN.INPT_YM
        FROM EXPENS_EXCN EXCN
        LEFT JOIN (
            SELECT IND.PRJCT_ID, CP.EXPENS_CD, IND.APLY_YM AS INPT_YM
            FROM PRJCT_INDVDL_CT_MM IND
            JOIN PRJCT_CT_APLY CP ON (IND.PRJCT_ID=CP.PRJCT_ID AND IND.EMP_ID = CP.EMP_ID AND IND.APLY_YM = CP.APLY_YM AND IND.APLY_ODR = CP.APLY_ODR)
            JOIN PRJCT_CT_ATRZ CT ON (CP.PRJCT_ID=CT.PRJCT_ID AND CP.EMP_ID = CT.EMP_ID AND CP.APLY_YM = CT.APLY_YM AND CP.APLY_ODR = CT.APLY_ODR AND CP.PRJCT_CT_APLY_SN = CT.PRJCT_CT_APLY_SN)
            WHERE 1=1
            AND CT.ATRZ_DMND_STTS_CD = "VTW03703"
            GROUP BY IND.PRJCT_ID, CP.EXPENS_CD, IND.APLY_YM
        ) AS NEW_DATA
        ON EXCN.PRJCT_ID = NEW_DATA.PRJCT_ID AND EXCN.EXPENS_CD = NEW_DATA.EXPENS_CD AND EXCN.INPT_YM = NEW_DATA.INPT_YM
        WHERE NEW_DATA.PRJCT_ID IS NULL
    </insert>
    
    <!-- 임시 테이블을 사용하여 삭제 -->
    <delete id="deleteFromMainTableCT">
        DELETE FROM EXPENS_EXCN
        WHERE (PRJCT_ID, EXPENS_CD, INPT_YM) IN (
            SELECT PRJCT_ID, EXPENS_CD, INPT_YM FROM tmp_delete_keys_ct
        )
    </delete>
    
    <!-- 임시 테이블 삭제 -->
    <update id="dropTempTableCT">
        DROP TEMPORARY TABLE tmp_delete_keys_ct
    </update>
    
    
    <!-- 재료비 -->
    <!-- 임시 테이블 생성 -->
    <update id="createTempTableMatrlCt">
        CREATE TEMPORARY TABLE tmp_delete_keys_matralct (PRJCT_ID VARCHAR(50), MATRL_CT_SN INT, PRDUCT_NM VARCHAR(100), QY INT, USE_AMT INT)
    </update>
    
    <!-- 임시 테이블에 데이터 삽입 -->
    <insert id="insertIntoTempTableMatrlCt">
		INSERT INTO tmp_delete_keys_matralct (PRJCT_ID, MATRL_CT_SN)
        SELECT EXCN.PRJCT_ID, EXCN.MATRL_CT_SN
		FROM MATRL_CT_EXCN EXCN
		LEFT JOIN (
		    SELECT EA.PRJCT_ID, CTRT.ENTRPS_CT_PRMPC_SN
		    FROM ELCTRN_ATRZ EA
		    JOIN (
		        SELECT CA.ELCTRN_ATRZ_ID, CD.ENTRPS_CT_PRMPC_SN
		        FROM CTRT_GIVE_ATRZ A
		        JOIN CTRT_GIVE_ATRZ_DTL AD ON A.ELCTRN_ATRZ_ID = AD.ELCTRN_ATRZ_ID
		        JOIN CTRT_ATRZ CA ON A.CTRT_ELCTRN_ATRZ_ID = CA.ELCTRN_ATRZ_ID
		        LEFT JOIN ENTRPS_CTRT_DTL CD ON CA.ELCTRN_ATRZ_ID = CD.ELCTRN_ATRZ_ID
		        WHERE CA.CTRT_KND_CD = 'VTW04403'
		    ) CTRT ON EA.ELCTRN_ATRZ_ID = CTRT.ELCTRN_ATRZ_ID
		    WHERE EA.ATRZ_DMND_STTS_CD = 'VTW03703'
		) AS NEW_DATA ON EXCN.PRJCT_ID = NEW_DATA.PRJCT_ID AND EXCN.MATRL_CT_SN = NEW_DATA.ENTRPS_CT_PRMPC_SN
		WHERE NEW_DATA.PRJCT_ID IS NULL
    </insert>
    
    <!-- 임시 테이블을 사용하여 삭제 -->
    <delete id="deleteFromMainTableMatrlCt">
        DELETE FROM MATRL_CT_EXCN
        WHERE (PRJCT_ID, MATRL_CT_SN) IN (
            SELECT PRJCT_ID, MATRL_CT_SN FROM tmp_delete_keys_matralct
        )
    </delete>
    
    <!-- 임시 테이블 삭제 -->
    <update id="dropTempTableMatrlCt">
        DROP TEMPORARY TABLE tmp_delete_keys_matralct
    </update>
    
    
    <!-- 외주업체 -->
    <!-- 임시 테이블 생성 -->
    <update id="createTempTableOutordEntrpsCt">
        CREATE TEMPORARY TABLE tmp_delete_keys_outordentrpsct (PRJCT_ID VARCHAR(50), OUTORD_ENTRPS_CT_PRMPC_SN INT, PRDUCT_NM VARCHAR(100), USE_AMT INT)
    </update>
    
    <!-- 임시 테이블에 데이터 삽입 -->
    <insert id="insertIntoTempTableOutordEntrpsCt">
		INSERT INTO tmp_delete_keys_outordentrpsct (PRJCT_ID, OUTORD_ENTRPS_CT_PRMPC_SN)
        SELECT EXCN.PRJCT_ID, EXCN.OUTORD_ENTRPS_CT_PRMPC_SN
		FROM OUTORD_ENTRPS_CT_EXCN EXCN
		LEFT JOIN (
		    SELECT EA.PRJCT_ID, CTRT.ENTRPS_CT_PRMPC_SN
		    FROM ELCTRN_ATRZ EA
		    JOIN (
		        SELECT CA.ELCTRN_ATRZ_ID, CD.ENTRPS_CT_PRMPC_SN
		        FROM CTRT_GIVE_ATRZ A
		        JOIN CTRT_GIVE_ATRZ_DTL AD ON A.ELCTRN_ATRZ_ID = AD.ELCTRN_ATRZ_ID
		        JOIN CTRT_ATRZ CA ON A.CTRT_ELCTRN_ATRZ_ID = CA.ELCTRN_ATRZ_ID
		        LEFT JOIN ENTRPS_CTRT_DTL CD ON CA.ELCTRN_ATRZ_ID = CD.ELCTRN_ATRZ_ID
		        WHERE CA.CTRT_KND_CD = 'VTW04402'
		    ) CTRT ON EA.ELCTRN_ATRZ_ID = CTRT.ELCTRN_ATRZ_ID
		    WHERE EA.ATRZ_DMND_STTS_CD = 'VTW03703'
		) AS NEW_DATA ON EXCN.PRJCT_ID = NEW_DATA.PRJCT_ID AND EXCN.OUTORD_ENTRPS_CT_PRMPC_SN = NEW_DATA.ENTRPS_CT_PRMPC_SN
		WHERE NEW_DATA.PRJCT_ID IS NULL
    </insert>
    
    <!-- 임시 테이블을 사용하여 삭제 -->
    <delete id="deleteFromMainTableOutordEntrpsCt">
        DELETE FROM OUTORD_ENTRPS_CT_EXCN
        WHERE (PRJCT_ID, OUTORD_ENTRPS_CT_PRMPC_SN) IN (
            SELECT PRJCT_ID, OUTORD_ENTRPS_CT_PRMPC_SN FROM tmp_delete_keys_outordentrpsct
        )
    </delete>
    
    <!-- 임시 테이블 삭제 -->
    <update id="dropTempTableOutordEntrpsCt">
        DROP TEMPORARY TABLE tmp_delete_keys_outordentrpsct
    </update>
    
    
    <!-- 외주인력 -->
    <!-- 임시 테이블 생성 -->
    <update id="createTempTableOutordLbrcoCt">
        CREATE TEMPORARY TABLE tmp_delete_keys_outordlbrcoct (PRJCT_ID VARCHAR(50), OUTORD_EMP_ID VARCHAR(50), INPT_YM VARCHAR(8), MM DECIMAL, GIVE_CT INT)
    </update>
    
    <!-- 임시 테이블에 데이터 삽입 -->
    <insert id="insertIntoTempTableOutordLbrcoCt">
		INSERT INTO tmp_delete_keys_outordlbrcoct (PRJCT_ID, OUTORD_EMP_ID, INPT_YM)
		SELECT EXCN.PRJCT_ID, EXCN.OUTORD_EMP_ID, EXCN.INPT_YM
		FROM OUTORD_LBRCO_EXCN EXCN
		LEFT JOIN (
		    SELECT 
		           EA.PRJCT_ID,
		           CTRT.EXPECT_INPT_HNF_ID AS OUTORD_EMP_ID,
		           CTRT.GIVE_YMD AS INPT_YM,
		           CTRT.MM,
		           CTRT.GIVE_AMT AS GIVE_CT
		    FROM ELCTRN_ATRZ EA
		    JOIN (
		        SELECT HCD.MM, 
		               HCD.EXPECT_INPT_HNF_ID, 
		               A.GIVE_YMD, 
		               A.ELCTRN_ATRZ_ID, 
		               AD.OUTORD_LBRCO_PRMPC_SN, 
		               SUM(AD.GIVE_AMT) AS GIVE_AMT
		        FROM CTRT_GIVE_ATRZ A
		        JOIN CTRT_GIVE_ATRZ_DTL AD ON A.ELCTRN_ATRZ_ID  = AD.ELCTRN_ATRZ_ID
		        JOIN CTRT_ATRZ CA ON A.CTRT_ELCTRN_ATRZ_ID  = CA.ELCTRN_ATRZ_ID 
		        LEFT JOIN (
		            SELECT 
		                HM.INPT_YM, 
		                HM.MM,
		                H.ELCTRN_ATRZ_ID,
		                H.EXPECT_INPT_HNF_ID, 
		                H.OUTORD_LBRCO_PRMPC_SN 
		            FROM HNF_CTRT_DTL H
		            JOIN HNF_CTRT_DTL_MM HM ON H.ELCTRN_ATRZ_ID = HM.ELCTRN_ATRZ_ID AND H.INPT_HNF_ID = HM.INPT_HNF_ID 
		            ) HCD
		            ON CA.ELCTRN_ATRZ_ID = HCD.ELCTRN_ATRZ_ID  AND A.GIVE_YMD = HCD.INPT_YM AND HCD.OUTORD_LBRCO_PRMPC_SN = AD.OUTORD_LBRCO_PRMPC_SN
		        WHERE CA.CTRT_KND_CD ='VTW04401'
		        GROUP BY HCD.MM, 
		                HCD.EXPECT_INPT_HNF_ID, 
		                A.GIVE_YMD, 
		                A.ELCTRN_ATRZ_ID, 
		                AD.OUTORD_LBRCO_PRMPC_SN
		    ) CTRT ON EA.ELCTRN_ATRZ_ID = CTRT.ELCTRN_ATRZ_ID
		    WHERE EA.ATRZ_DMND_STTS_CD ='VTW03703'
		    )NEW_DATA ON EXCN.PRJCT_ID = NEW_DATA.PRJCT_ID AND EXCN.OUTORD_EMP_ID = NEW_DATA.OUTORD_EMP_ID AND EXCN.INPT_YM = NEW_DATA.INPT_YM
		    WHERE NEW_DATA.PRJCT_ID IS NULL
		
    </insert>
    
    <!-- 임시 테이블을 사용하여 삭제 -->
    <delete id="deleteFromMainTableOutordLbrcoCt">
        DELETE FROM OUTORD_LBRCO_EXCN
        WHERE (PRJCT_ID, OUTORD_EMP_ID, INPT_YM) IN (
            SELECT PRJCT_ID, OUTORD_EMP_ID, INPT_YM FROM tmp_delete_keys_outordlbrcoct
        )
    </delete>
    
    <!-- 임시 테이블 삭제 -->
    <update id="dropTempTableOutordLbrcoCt">
        DROP TEMPORARY TABLE tmp_delete_keys_outordlbrcoct
    </update>
    

	<!-- 박지환_작업 -->
	<insert id = "insertCtrtDate" >
		/* batchMapper.insertCtrtDate */
		INSERT INTO CRTR_DATE
		VALUES(
			#{crtrYmd}
			,#{crtrOdr}
			<if test="hldyClCd != null and !hldyClCd.equals('')">
				,#{hldyClCd}
			</if>
			<if test="hldyClCd == null or hldyClCd.equals('')">
				,'VTW05001'
			</if>
			,#{hldyNm}
			,#{rm}
			,#{ddlnYn}
			,#{vcatnCntrlYmdYn}
			,SYSDATE()
			,SYSDATE()
			,'BATCH'
			,'BATCH'
			,''
		) ON DUPLICATE KEY UPDATE
			CRTR_YMD 		= 	#{crtrYmd}
			,CRTR_ODR 		= 	#{crtrOdr}
			<if test="hldyClCd != null and !hldyClCd.equals('')">
				,HLDY_CL_CD = 	CASE WHEN (SELECT CRTR2.PASSIV_INFO_INPT_YN FROM CRTR_DATE CRTR2 WHERE CRTR2.CRTR_YMD = #{crtrYmd}) = 'N'
								THEN (SELECT CRTR2.HLDY_CL_CD FROM CRTR_DATE CRTR2 WHERE CRTR2.CRTR_YMD = #{crtrYmd})
								ELSE #{hldyClCd}
								END
			</if>
			<if test="hldyClCd == null or hldyClCd.equals('')">
				,HLDY_CL_CD = 	CASE WHEN (SELECT CRTR2.PASSIV_INFO_INPT_YN FROM CRTR_DATE CRTR2 WHERE CRTR2.CRTR_YMD = #{crtrYmd}) = 'N'
								THEN (SELECT CRTR2.HLDY_CL_CD FROM CRTR_DATE CRTR2 WHERE CRTR2.CRTR_YMD = #{crtrYmd})
								ELSE 'VTW05001'
								END
			</if>
			,HLDY_NM		= 	CASE WHEN (SELECT CRTR2.PASSIV_INFO_INPT_YN FROM CRTR_DATE CRTR2 WHERE CRTR2.CRTR_YMD = #{crtrYmd}) = 'N'
								THEN (SELECT CRTR2.HLDY_NM FROM CRTR_DATE CRTR2 WHERE CRTR2.CRTR_YMD = #{crtrYmd})
								ELSE #{hldyNm}
								END
			,MDFCN_DT		= 	SYSDATE()
	</insert>

	<select id="retrieveKmsEmp" resultType="com.trsystem.LowerHashMap">
	SELECT EMPNO AS USER_ID -- 사번
		 , EMP_FLNM AS NAME -- 이름
		 , JBPS_CD AS POSITION -- 직위
         , (SELECT CD_NM FROM CD WHERE CD_VALUE = JBPS_CD) AS POSITION_NM -- 직위명
         , TELNO AS TEL -- 전화번호
         , HDOF_STTS_CD AS WORKING_STATUS -- 재직현황
         , (SELECT CD_NM FROM CD WHERE CD_VALUE = HDOF_STTS_CD) AS WORKING_STATUS_NM -- 재직현황
	  FROM EMP
     WHERE EMP_TY_CD != 'VTW00203'
	  AND HDOF_STTS_CD = 'VTW00301'
	  AND EMPNO NOT BETWEEN 'VK0101' AND 'VK0111'
	</select>

	<select id="retrieveKmsLgnUser" resultType="com.trsystem.LowerHashMap">
	SELECT L.EMPNO AS USER_ID
		 , PSWD AS PASSWORD
	 FROM LGN_USER L
     LEFT JOIN EMP E
       ON L.EMP_ID = E.EMP_ID
      AND EMP_TY_CD != 'VTW00203'
      AND HDOF_STTS_CD = 'VTW00301'
      AND L.EMPNO NOT BETWEEN 'VK0101' AND 'VK0111'
	</select>
</mapper>