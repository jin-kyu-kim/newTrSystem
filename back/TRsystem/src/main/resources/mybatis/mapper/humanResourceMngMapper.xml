<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.trsystem.mybatis.mapper.humanResourceMngMapper">

    <!--==================1.부서 관리==================-->
    <!--부서 목록 조회-->
	<!--트리구조 부서조회-->
	   <select id="retrieveDeptList" parameterType="map" resultType="com.trsystem.LowerHashMap">
		WITH RECURSIVE DEPT_PATH(DEPT_ID,DEPT_NM,UP_DEPT_ID,EMP_FLNM,DEPT_BGNG_YMD,DEPT_END_YMD,DEPTH) AS (
			    SELECT 
			        DEPT_ID
			        ,DEPT_NM
			        ,UP_DEPT_ID
			        ,(
			            SELECT a.EMP_ID
			            FROM (
			                SELECT e.EMP_ID,
			                        ROW_NUMBER() OVER (ORDER BY h.JBTTL_CD) AS RN
			                FROM EMP e
			                INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
			                WHERE h.DEPT_ID = aa.DEPT_ID
			            ) a
			            WHERE RN = 1
			        ) AS EMP_FLNM  -- 부서장명
			        ,DEPT_BGNG_YMD
			        ,DEPT_END_YMD
			        ,1
			    FROM 
			        DEPT aa
			    WHERE 
			        aa.UP_DEPT_ID IS NULL
					 AND aa.END_YN != 'Y'
			    UNION ALL
			
			    SELECT 
			        d.DEPT_ID
			        ,d.DEPT_NM
			        ,d.UP_DEPT_ID
			        ,(
			            SELECT a.EMP_ID
			            FROM (
			                SELECT e.EMP_ID,
			                        ROW_NUMBER() OVER (ORDER BY h.JBTTL_CD) AS RN
			                FROM EMP e
			                INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
			                WHERE h.DEPT_ID = d.DEPT_ID
			            ) a
			            WHERE RN = 1
			        ) AS EMP_FLNM	-- 부서장명
			        ,d.DEPT_BGNG_YMD
			        ,d.DEPT_END_YMD
			        ,dp.DEPTH + 1
			    FROM DEPT d
			    INNER JOIN DEPT_PATH dp ON d.UP_DEPT_ID = dp.DEPT_ID
			    WHERE 
        		d.END_YN != 'Y'
			)
			SELECT 
			    DEPT_ID,
			    DEPT_NM,
			    UP_DEPT_ID,
			    EMP_FLNM,
			    DEPT_BGNG_YMD,
			    DEPT_END_YMD, 
			    COUNT(*) OVER () AS TOTAL_ITEMS       
			FROM 
			    DEPT_PATH
			ORDER BY 
			    DEPT_BGNG_YMD ASC 
		</select>
		
	   <!--부서 상세 조회-->
  	   <select id="getDeptDetail" parameterType="map" resultType="com.trsystem.LowerHashMap">
	   SELECT d.DEPT_ID
	        , d.DEPT_NM                                                                                   -- 부서명
	        , (SELECT d2.DEPT_NM FROM DEPT d2 WHERE d.UP_DEPT_ID = d2.DEPT_ID) AS UP_DEPT_NM              -- 상위부서명
	        , (SELECT a.EMP_FLNM
				FROM (SELECT e.EMP_FLNM
					         , ROW_NUMBER() OVER (ORDER BY h.JBTTL_CD) AS RN
					    FROM EMP e
					    INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
					    WHERE h.DEPT_ID = d.DEPT_ID) a
				WHERE RN = 1) AS DEPT_MNGR_EMP_FLNM                                                       -- 부서장명
	        , d.DEPT_BGNG_YMD                                                                             -- 부서시작일자
	        , d.DEPT_END_YMD                                                                              -- 부서종료일자
	     FROM DEPT d
	     WHERE 1=1
	       AND d.DEPT_ID = #{deptId}
		</select>


		<!--부서 하위부서 조회-->
		<select id="retrieveDownDeptList" parameterType="map" resultType="com.trsystem.LowerHashMap">
			SELECT d.DEPT_ID
                 , d.DEPT_NM
                 , (SELECT EMP_FLNM
				      FROM (SELECT e.EMP_FLNM
					             , ROW_NUMBER() OVER (ORDER BY h.JBTTL_CD) AS RN
					          FROM EMP e
					         INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
					         WHERE h.DEPT_ID = d.DEPT_ID) a
				      WHERE RN = 1) AS DEPT_MNGR_EMP_FLNM
              FROM DEPT d
             WHERE d.UP_DEPT_ID = #{deptId}
		</select>


		<select id="retrieveDeptHnfList" parameterType="map" resultType="com.trsystem.LowerHashMap">
			SELECT e.EMP_ID
			       , e.EMPNO
			       , e.EMP_FLNM
			       , ( SELECT c.CD_NM
			             FROM CD c
                        WHERE c.CD_VALUE = e.JBPS_CD) AS JBPS_NM                                          -- 직위
                   , e.JBPS_CD     
                   , ( SELECT c.CD_NM
			             FROM CD c
                        WHERE c.CD_VALUE = h.JBTTL_CD) AS JBTTL_NM                                        -- 직책
                   , h.JBTTL_CD
                   , h.DEPT_GNFD_YMD																	  -- 발령일자     
		      FROM EMP e
		     INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
		     WHERE h.DEPT_ID = #{deptId}
            	AND e.HDOF_STTS_CD != 'VTW00302'
		     ORDER BY h.JBTTL_CD 
		</select>


	<!-- 휴가사용내역 -->
	<select id="retrieveEmpVacUseList" parameterType="map" resultType="com.trsystem.LowerHashMap">
	    SELECT
	        c.CD_NM AS VCATN_TY_CD,
	        e.EMPNO as EMPNO,
	        e.EMP_FLNM as EMP_FLNM,
	        STR_TO_DATE(VCATN_BGNG_YMD, '%Y%m%d') AS VCATN_BGNG_YMD,
	        STR_TO_DATE(VCATN_END_YMD, '%Y%m%d') AS VCATN_END_YMD,
	        VCATN_DE_CNT,
	        VCATN_PRVONSH,
	        COUNT(*) OVER () AS TOTAL_ITEMS
	    FROM
	        VCATN_ATRZ va
	        JOIN CD c ON c.CD_VALUE = va.VCATN_TY_CD
	        JOIN ELCTRN_ATRZ ea ON ea.ELCTRN_ATRZ_ID = va.ELCTRN_ATRZ_ID
	        JOIN EMP e ON e.EMP_ID = ea.ATRZ_DMND_EMP_ID
	    WHERE 1=1
	    AND ea.ATRZ_DMND_STTS_CD ='VTW03703'
	    <if test="vcatnBgngYmd != null and vcatnBgngYmd != '' and (vcatnEndYmd == null or vcatnEndYmd == '')">
	        AND VCATN_BGNG_YMD <![CDATA[>=]]> #{vcatnBgngYmd}
	    </if>
	    <if test="(vcatnBgngYmd == null or vcatnBgngYmd == '') and vcatnEndYmd != null and vcatnEndYmd != ''">
	        AND VCATN_END_YMD <![CDATA[<=]]> #{vcatnEndYmd}
	    </if>
	    <if test="vcatnBgngYmd != null and vcatnBgngYmd != '' and vcatnEndYmd != null and vcatnEndYmd != ''">
	        AND VCATN_BGNG_YMD BETWEEN #{vcatnBgngYmd} AND #{vcatnEndYmd}
	    </if>
	    <if test="empFlnm != null and empFlnm != ''">
	        AND e.EMP_FLNM LIKE CONCAT('%', #{empFlnm}, '%')
	    </if>
	    ORDER BY ea.REG_DT DESC
</select>



	<!--사번max값 조회용 쿼리-->
	<select id="retrieveEmpnoMax" parameterType="map" resultType="com.trsystem.LowerHashMap">
	SELECT
    CONCAT(
        CASE 
            WHEN #{empnoChk} = 'VKP' THEN 'VKP'
            ELSE #{empnoChk}
        END,
        IFNULL(LPAD(MAX(SUBSTR(EMPNO, CASE WHEN #{empnoChk} = 'VKP' THEN 4 ELSE 3 END))+1, '4', '0'), '1000')
    ) AS EMPNO_CHK
	FROM
	    EMP
	WHERE
	    (CASE 
	        WHEN #{empnoChk} = 'VKP' THEN EMPNO LIKE 'VKP%'
	        ELSE EMPNO LIKE CONCAT(#{empnoChk},'%') AND NOT EMPNO LIKE 'VKP%'
	    END)
	</select>



	<!-- 박지환 작업 -->
	<!--휴가배정정보조회-->
	<select id="retrieveEmpVcatnInfo" parameterType="map" resultType="com.trsystem.LowerHashMap">
		WITH VCANT_LIST AS(
			SELECT
				EMP.EMP_ID 							/* 사원ID */
				,EMP.EMPNO 							/* 사원번호 */
				,EMP.EMP_FLNM 						/* 사원명 */
				,(SELECT CD_VALUE FROM CD WHERE EMP.JBPS_CD = CD.CD_VALUE)			JOB_CD 			/* 직급코드 */
				,(SELECT CD_NM FROM CD WHERE EMP.JBPS_CD = CD.CD_VALUE)				JOB_NM 			/* 직급명 */
				,DEPT.DEPT_ID 						/* 부서ID */
				,DEPT.DEPT_NM 						/* 부서명 */
				,(SELECT CD_VALUE FROM CD WHERE EMP.HDOF_STTS_CD = CD.CD_VALUE)		HDOF_STTS_CD 	/* 재직상태코드 */
				,(SELECT CD_NM FROM CD WHERE EMP.HDOF_STTS_CD = CD.CD_VALUE)		HDOF_STTS_NM 	/* 재직상태명 */
				,VMNG.VCATN_ALTMNT_SN 				/* 휴가배정순번 */
				,VMNG.VCATN_YR 				 		/* 휴가연도 */
				,VMNG.VCATN_ALTMNT_DAYCNT			/* 휴가배정일수 */
				,VMNG.USE_DAYCNT					/* 사용일수 */
				,VMNG.VCATN_REMNDR_DAYCNT			/* 휴가잔여일수 */
				,VMNG.NEW_VCATN_ALTMNT_DAYCNT		/* 신규휴가배정일수 */
				,VMNG.NEW_USE_DAYCNT				/* 신규사용일수 */
				,VMNG.NEW_REMNDR_DAYCNT				/* 신규잔여일수 */
				,VMNG.ALTMNT_BGNG_YMD				/* 배정시작일자 */
				,VMNG.ALTMNT_USE_END_YMD			/* 배정사용종료일자 */
				,IFNULL(VMNG.NEW_VCATN_YN, 'N')	NEW_VCATN_YN	/* 신규휴가여부 */
				,CASE WHEN DATEDIFF(DATE_FORMAT(NOW(), '%Y%m%d'), DATE_FORMAT(CONCAT(DATE_FORMAT(NOW(), '%Y'), '0401'), '%Y%m%d')) <![CDATA[<]]> 0 THEN DATE_FORMAT(NOW(), '%Y') - 1
					ELSE DATE_FORMAT(NOW(), '%Y')
					END FLAG_YEAR						/* 회계년도 */
				,CASE
					WHEN NEW_VCATN_YN = 'Y' THEN NEW_VCATN_ALTMNT_DAYCNT
					ELSE VCATN_ALTMNT_DAYCNT
					END TABLE_ALTMNT_DAYCNT
				,CASE
					WHEN NEW_VCATN_YN = 'Y' THEN NEW_USE_DAYCNT
					ELSE USE_DAYCNT
					END TABLE_USE_DAYCNT
				,CASE
					WHEN NEW_VCATN_YN = 'Y' THEN NEW_REMNDR_DAYCNT
					ELSE VCATN_REMNDR_DAYCNT
					END TABLE_REMNDR_DAYCNT
			FROM EMP EMP
			LEFT JOIN VCATN_MNG VMNG ON EMP.EMP_ID = VMNG.EMP_ID
			LEFT JOIN DEPT_HNF HNF ON HNF.EMPNO = EMP.EMPNO
			LEFT JOIN DEPT DEPT ON DEPT.DEPT_ID = HNF.DEPT_ID
			WHERE 1 = 1
			<if test="deptId != null and !deptId.equals('')">
				AND DEPT.DEPT_ID = #{deptId}
			</if>
		    AND EMP.HDOF_STTS_CD = 'VTW00301'
		    AND EMP.EMP_TY_CD != 'VTW00203'
		)
		SELECT DISTINCT
		     E.EMP_ID 						/* 사원ID */
			,E.EMPNO						/* 사원번호 */
			,E.EMP_FLNM 					/* 사원명 */
			,VCATN.JOB_CD						/* 직급코드 */
			,VCATN.JOB_NM						/* 직급명 */
			,VCATN.HDOF_STTS_NM					/* 재직상태명 */
			,VCATN.VCATN_ALTMNT_SN 				/* 휴가배정순번 */
			,VCATN.VCATN_YR 				 	/* 휴가연도 */
			,VCATN.VCATN_ALTMNT_DAYCNT			/* 휴가배정일수 */
			,VCATN.USE_DAYCNT					/* 사용일수 */
			,VCATN.VCATN_REMNDR_DAYCNT			/* 휴가잔여일수 */
			,VCATN.NEW_VCATN_ALTMNT_DAYCNT		/* 신규휴가배정일수 */
			,VCATN.NEW_USE_DAYCNT				/* 신규사용일수 */
			,VCATN.NEW_REMNDR_DAYCNT			/* 신규잔여일수 */
			,VCATN.ALTMNT_BGNG_YMD				/* 배정시작일자 */
			,VCATN.ALTMNT_USE_END_YMD			/* 배정사용종료일자 */
			,VCATN.NEW_VCATN_YN 				/* 신규휴가여부 */
			,VCATN.TABLE_ALTMNT_DAYCNT 			/* 배정일수 */
			,VCATN.TABLE_USE_DAYCNT 			/* 사용일수 */
			,VCATN.TABLE_REMNDR_DAYCNT 			/* 잔여일수 */
		FROM EMP E
		LEFT JOIN VCANT_LIST VCATN ON E.EMP_ID = VCATN.EMP_ID
		WHERE 1 = 1
		AND E.HDOF_STTS_CD = 'VTW00301'
		AND E.EMP_TY_CD != 'VTW00203'
		<if test="vcatnYr == null or vcatnYr.equals('')">
			AND ( VCATN_YR = FLAG_YEAR OR VCATN_YR IS NULL)
		</if>
		<if test="vcatnYr != null and !vcatnYr.equals('')">
			AND ( VCATN_YR =  #{vcatnYr} OR VCATN_YR IS NULL)
		</if>
		<if test="empId != null and !empId.equals('')">
			AND E.EMP_ID = #{empId}
		</if>
		<if test="newVcatnYn != null and !newVcatnYn.equals('')">
			AND NEW_VCATN_YN = #{newVcatnYn}
		</if>
		<if test="empno != null and !empno.equals('')">
			AND E.EMPNO LIKE CONCAT('%', #{empno}, '%')
		</if>
		<if test="empFlnm != null and !empFlnm.equals('')">
			AND E.EMP_FLNM LIKE CONCAT('%', #{empFlnm}, '%')
		</if>
		<if test="jobCd != null and !jobCd.equals('')">
			AND E.JOB_CD  = #{jobCd}
		</if>
		<if test="hdofSttsCd != null and !hdofSttsCd.equals('')">
			AND E.HDOF_STTS_CD = #{hdofSttsCd}
		</if>
		ORDER BY JOB_CD
	</select>

	<select id="retrieveEmpVcatnInfoList" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT *
		FROM (
			SELECT
				EMP.EMP_ID 							/* 사원ID */
				,EMP.EMPNO 							/* 사원번호 */
				,EMP.EMP_FLNM 						/* 사원명 */
				,(SELECT CD_VALUE FROM CD WHERE EMP.JBPS_CD = CD.CD_VALUE)			JOB_CD 			/* 직급코드 */
				,(SELECT CD_NM FROM CD WHERE EMP.JBPS_CD = CD.CD_VALUE)				JOB_NM 			/* 직급명 */
				,DEPT.DEPT_ID 						/* 부서ID */
				,DEPT.DEPT_NM 						/* 부서명 */
				,(SELECT CD_VALUE FROM CD WHERE EMP.HDOF_STTS_CD = CD.CD_VALUE)		HDOF_STTS_CD 	/* 재직상태코드 */
				,(SELECT CD_NM FROM CD WHERE EMP.HDOF_STTS_CD = CD.CD_VALUE)		HDOF_STTS_NM 	/* 재직상태명 */
				,VMNG.VCATN_ALTMNT_SN 				/* 휴가배정순번 */
				,VMNG.VCATN_YR 				 		/* 휴가연도 */
				,VMNG.VCATN_ALTMNT_DAYCNT			/* 휴가배정일수 */
				,VMNG.USE_DAYCNT					/* 사용일수 */
				,VMNG.VCATN_REMNDR_DAYCNT			/* 휴가잔여일수 */
				,VMNG.NEW_VCATN_ALTMNT_DAYCNT		/* 신규휴가배정일수 */
				,VMNG.NEW_USE_DAYCNT				/* 신규사용일수 */
				,VMNG.NEW_REMNDR_DAYCNT				/* 신규잔여일수 */
				,VMNG.ALTMNT_BGNG_YMD				/* 배정시작일자 */
				,VMNG.ALTMNT_USE_END_YMD			/* 배정사용종료일자 */
				,CASE WHEN DATEDIFF(DATE_FORMAT(NOW(), '%Y%m%d'), DATE_FORMAT(CONCAT(DATE_FORMAT(NOW(), '%Y'), '0401'), '%Y%m%d')) <![CDATA[<]]> 0 THEN DATE_FORMAT(NOW(), '%Y') - 1
					ELSE DATE_FORMAT(NOW(), '%Y')
					END FLAG_YEAR						/* 회계년도 */
			FROM VCATN_MNG	VMNG
			RIGHT JOIN EMP EMP ON EMP.EMP_ID = VMNG.EMP_ID
			LEFT JOIN DEPT_HNF HNF ON HNF.EMPNO = EMP.EMPNO
			LEFT JOIN DEPT DEPT ON DEPT.DEPT_ID = HNF.DEPT_ID
		) A
		WHERE 1 = 1
		<if test="vcatnYr == null or vcatnYr.equals('')">
			AND VCATN_YR = FLAG_YEAR
		</if>
		<if test="vcatnYr != null and !vcatnYr.equals('')">
			AND VCATN_YR = #{vcatnYr}
		</if>
	</select>

	<!-- 휴가배정정보저장 -->
	<insert id="insertVcatnMng" parameterType="map">
		INSERT INTO VCATN_MNG
			SELECT
				CASE
					WHEN (SELECT VCATN_ALTMNT_SN FROM VCATN_MNG WHERE EMP_ID = #{empId} AND VCATN_YR = #{vcatnYr}) IS NOT NULL
				THEN (SELECT VCATN_ALTMNT_SN FROM VCATN_MNG WHERE EMP_ID = #{empId} AND VCATN_YR = #{vcatnYr})
					WHEN (SELECT VCATN_ALTMNT_SN FROM VCATN_MNG WHERE EMP_ID = #{empId} AND VCATN_YR = #{vcatnYr}) IS NULL
						THEN CASE
							WHEN (SELECT MAX(VCATN_ALTMNT_SN) FROM VCATN_MNG WHERE EMP_ID = #{empId}) IS NOT NULL
						THEN (SELECT MAX(VCATN_ALTMNT_SN) + 1 FROM VCATN_MNG WHERE EMP_ID = #{empId})
							WHEN (SELECT MAX(VCATN_ALTMNT_SN) FROM VCATN_MNG WHERE EMP_ID = #{empId}) IS NULL
						THEN 1
					END
		END VCATN_ALTMNT_SN  		/* 휴가배정순번 */
		,#{empId}					/* 직원ID */
		,#{vcatnYr}					/* 휴가연도 */
		<if test='newVcatnYn == "Y" and newVcatnYn.equals("Y")'>
			,0
			,0
			,0
			,0
			,#{newVcatnAltmntDaycnt}	/* 신규휴가배정일수 */
			,#{newUseDaycnt}			/* 신규사용일수 */
			,#{newVcatnAltmntDaycnt}	/* 신규잔여일수 */
		</if>
		<if test='newVcatnYn == "N" and newVcatnYn.equals("N")'>
			,#{vcatnAltmntDaycnt}		/* 휴가배정일수 */
			,#{useDaycnt}				/* 사용일수 */
			,#{pblenVcatnUseDaycnt} 	/* 공적휴가사용일수 */
			,#{vcatnAltmntDaycnt}		/* 휴가잔여일수 */
			,0
			,0
			,0
		</if>
		,#{altmntBgngYmd}			/* 배정시작일자 */
		,#{altmntUseEndYmd}			/* 배정사용종료일자 */
		,SYSDATE()					/* 등록일시 */
		,#{regEmpId}				/* 등록지원ID */
		,SYSDATE()					/* 수정일시 */
		,#{mdfcnEmpId}				/* 수정직원ID */
		,#{newAltmntDdlnYr}			/* 신규배정마감연도 */
		,#{newVcatnYn}				/* 신규휴가여부 */
		ON DUPLICATE KEY UPDATE
			ALTMNT_BGNG_YMD				= #{altmntBgngYmd}								/* 배정시작일자 */
			,ALTMNT_USE_END_YMD			= #{altmntUseEndYmd}							/* 배정사용종료일자 */
			,MDFCN_DT					= SYSDATE()										/* 수정일시 */
			,MDFCN_EMP_ID				= #{sessionEmpId}								/* 수정직원ID */
			<if test='newVcatnYn == "Y" and newVcatnYn.equals("Y")'>
				,NEW_VCATN_ALTMNT_DAYCNT	= #{newVcatnAltmntDaycnt}					/* 신규휴가배정일수 */
				,NEW_REMNDR_DAYCNT 			= #{newVcatnAltmntDaycnt} - #{newUseDaycnt}	/* 신규잔여일수 */
			</if>
			<if test='newVcatnYn == "N" and newVcatnYn.equals("N")'>
				,VCATN_ALTMNT_DAYCNT		= #{vcatnAltmntDaycnt}						/* 휴가배정일수 */
				,VCATN_REMNDR_DAYCNT 		= #{vcatnAltmntDaycnt} - #{useDaycnt}		/* 휴가잔여일수 */
			</if>
	</insert>

	<!-- 월별휴가정보조회 -->
	<select id="retrieveMnbyVcatnInfo" parameterType="map" resultType="com.trsystem.LowerHashMap">
		WITH RECURSIVE VCATN_CNT AS (
			SELECT
				CONCAT(EMP.EMP_FLNM, '(', CD.CD_NM, ')') AS TITLE
				,DATE(VCATN.VCATN_BGNG_YMD) AS VCATN_BGNG_YMD
				,DATE(VCATN.VCATN_END_YMD) AS VCATN_END_YMD
			FROM EMP 			EMP
				,VCATN_ATRZ		VCATN
				,ELCTRN_ATRZ 	ELCTRN
				,CD 			CD
			WHERE EMP.EMP_ID = ELCTRN.ATRZ_DMND_EMP_ID
			AND VCATN.ELCTRN_ATRZ_ID = ELCTRN.ELCTRN_ATRZ_ID
			AND VCATN.VCATN_TY_CD != 'VTW01207'
			AND CD.CD_VALUE = VCATN.VCATN_TY_CD
			AND ELCTRN.ATRZ_DMND_STTS_CD = 'VTW03703'
			<if test="searchYear !=null and !searchYear.equals('')">
				AND SUBSTR(VCATN.VCATN_BGNG_YMD, 1, 4) = #{searchYear}
			</if>
			<if test="searchMonth !=null and !searchMonth.equals('')">
				AND SUBSTR(VCATN.VCATN_BGNG_YMD, 5, 2) = #{searchMonth}
			</if>
			<if test="empId !=null and !empId.equals('')">
				AND EMP.EMP_ID = #{empId}
			</if>
		UNION ALL
			SELECT
				TITLE
				,DATE_ADD(VCATN_BGNG_YMD, INTERVAL 1 DAY) AS VCATN_BGNG_YMD
				,VCATN_END_YMD
			FROM VCATN_CNT
			WHERE VCATN_BGNG_YMD <![CDATA[<]]> VCATN_END_YMD
		)
		SELECT
			CNT.TITLE
			,CNT.VCATN_BGNG_YMD AS DATE
		FROM VCATN_CNT 	CNT
			,CRTR_DATE	CRTR
		WHERE DATE_FORMAT(VCATN_BGNG_YMD, '%Y%m%d') = CRTR.CRTR_YMD
		AND CRTR.HLDY_CL_CD = 'VTW05001'
	</select>

	<!-- 회의실예약정보조회 -->
	<select id="retrieveMtgRoomInfoInq" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT
			EMP.EMP_ID 							/* 사원ID */
			,EMP.EMPNO 							/* 사원번호 */
			,EMP.EMP_FLNM	RSVT_EMP_FLNM		/* 예약자성명 */
			,RSVT.MTG_ROOM_RSVT_SN 				/* 회의실순번 */
			,RSVT.MTG_ROOM_CD 					/* 회의실코드 */
			,(SELECT CD_NM FROM CD WHERE RSVT.MTG_ROOM_CD = CD.CD_VALUE)	MTG_ROOM_NM	/* 회의실명 */
			,RSVT.RSVT_EMP_ID					/* 예약직원ID */
			,RSVT.USE_YMD 						/* 사용일자 */
			,RSVT.USE_BGNG_HM  					/* 사용시작시분 */
			,RSVT.USE_END_HM 					/* 사용종료시분 */
			,RSVT.MTG_TTL 						/* 회의내용 */
			,STR_TO_DATE(CONCAT(USE_YMD, USE_BGNG_HM), '%Y%m%d%H%i%s')  START_DATE	/* 사용시작일자 */
			,STR_TO_DATE(CONCAT(USE_YMD, USE_END_HM), '%Y%m%d%H%i%s')   END_DATE	/* 사용종료일자 */
			FROM MTG_ROOM_RSVT		RSVT
				,EMP			EMP
		WHERE RSVT.RSVT_EMP_ID = EMP.EMP_ID
<!--		AND EXISTS (-->
<!--			SELECT 1-->
<!--			FROM MTG_ROOM_RSVT_ATDRN    ATDRN-->
<!--			WHERE RSVT.MTG_ROOM_RSVT_SN = ATDRN.MTG_ROOM_RSVT_SN-->
<!--		)-->
		<if test="changeDate !=null and !changeDate.equals('')">
			AND (RSVT.USE_YMD BETWEEN #{changeDate} - 7 AND #{changeDate} + 7)
		</if>
	</select>

	<!-- 회의참석자조회 -->
	<select id="retrieveMtgAtdrnInq" parameterType="map" resultType="com.trsystem.LowerHashMap">
		WITH EMP_DEPT_LIST AS(
			SELECT
				EMP.EMP_ID
				,EMP.EMPNO
				,EMP.EMP_FLNM
				,EMP.JBPS_CD
				,(SELECT CD_NM FROM CD WHERE CD_VALUE = EMP.JBPS_CD) JBPS_NM
				,EMP.HDOF_STTS_CD
				,(SELECT CD_NM FROM CD WHERE CD_VALUE = EMP.HDOF_STTS_CD) HDOF_STTS_NM
				,CONCAT(GROUP_CONCAT(DEPT.DEPT_NM SEPARATOR ', '), ' ', EMP.EMP_FLNM, ' ', (SELECT CD_NM FROM CD WHERE CD_VALUE = EMP.JBPS_CD)) LIST_EMP_FLNM
			FROM DEPT DEPT
			JOIN DEPT_HNF HNF ON DEPT.DEPT_ID = HNF.DEPT_ID
			JOIN EMP EMP ON EMP.EMP_ID = HNF.EMP_ID
			GROUP BY EMP.EMP_ID
			ORDER BY EMP.EMP_ID
		)
		SELECT
			EMP.EMP_ID 					/* 사원ID */
			,EMP.EMPNO 					/* 사원번호 */
			,EMP.EMP_FLNM 				/* 사원명 */
			,EMP.LIST_EMP_FLNM			/* 부서_사원_직급명 */
			,RSVT.USE_YMD 				/* 사용일자 */
			,ATDRN.MTG_ATDRN_SN			/* 회의참석자일련번호 */
			,ATDRN.MTG_ROOM_RSVT_SN		/* 회의실예약순번 */
			,RSVT.MTG_ROOM_CD			/* 회의실코드 */
			,(SELECT CD_NM FROM CD WHERE CD_VALUE = RSVT.MTG_ROOM_CD)	/* 회의실명 */
		FROM MTG_ROOM_RSVT			RSVT
			,MTG_ROOM_RSVT_ATDRN	ATDRN
			,EMP_DEPT_LIST 			EMP
		WHERE RSVT.MTG_ROOM_RSVT_SN = ATDRN.MTG_ROOM_RSVT_SN
		AND ATDRN.ATND_EMP_ID = EMP.EMP_ID
		<if test="mtgRoomRsvtSn !=null and !mtgRoomRsvtSn.equals('')">
			AND ATDRN.MTG_ROOM_RSVT_SN = #{mtgRoomRsvtSn}
		</if>
	</select>

	<select id="retrieveMtgRoomInfo" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT
			mrr.MTG_ROOM_CD,
			mrr.RSVT_EMP_ID,
			CONCAT(USE_YMD, USE_BGNG_HM) AS START_TIME,
			CONCAT(USE_YMD, USE_END_HM) AS END_TIME,
			MTG_TTL,
			ATND_EMP_ID
		FROM MTG_ROOM_RSVT mrr
			JOIN MTG_ROOM_RSVT_ATDRN mrra ON mrr.MTG_ROOM_RSVT_SN = mrra.MTG_ROOM_RSVT_SN
		WHERE mrr.MTG_ROOM_RSVT_SN = #{mtgRoomRsvtSn}
	</select>

	<!-- 코드조회 -->
	<select id="retrieveCodeList" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT
			CD_VALUE
			,CD_NM
			,UP_CD_VALUE
		FROM CD
		WHERE UP_CD_VALUE = #{upCdValue}
<!--		WHERE UP_CD_VALUE IN-->
<!--		<foreach collection="empNoList" item="code" index="index" separator="," open="(" close=")">-->
<!--			#{upCdValue}-->
<!--		</foreach>-->
		AND USE_YN = 'Y'
	</select>


	<!-- 직원목록조회 -->
	<select id="retrieveEmpList" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT
			EMP.EMP_ID
			,EMP.EMPNO
			,EMP.EMP_FLNM
			,EMP.JBPS_CD
			,(SELECT CD_NM FROM CD WHERE CD_VALUE = EMP.JBPS_CD) JBPS_NM
			,EMP.HDOF_STTS_CD
			,(SELECT CD_NM FROM CD WHERE CD_VALUE = EMP.HDOF_STTS_CD) HDOF_STTS_NM
			,GROUP_CONCAT(DEPT.DEPT_NM SEPARATOR ', ')	DEPT_NM
			,CONCAT(GROUP_CONCAT(DEPT.DEPT_NM SEPARATOR ', '), ' ', EMP.EMP_FLNM, ' ', (SELECT CD_NM FROM CD WHERE CD_VALUE = EMP.JBPS_CD)) LIST_EMP_FLNM
		FROM DEPT DEPT
		JOIN DEPT_HNF HNF ON DEPT.DEPT_ID = HNF.DEPT_ID
		JOIN EMP EMP ON EMP.EMP_ID = HNF.EMP_ID
		WHERE HDOF_STTS_CD = 'VTW00301'
			AND EMP_TY_CD IN ('VTW00201','VTW00202')
			AND EMP.EMPNO NOT BETWEEN 'VK0101'AND 'VK0110'
			AND DEPT.END_YN = 'N'
		GROUP BY EMP.EMP_ID
		ORDER BY EMP.EMP_ID
	</select>

	<!-- 회의실예약순번MAX 조회 -->
	<select id="retrieveMtgRoomSnInq" parameterType="map" resultType="com.trsystem.LowerHashMap">
		SELECT IFNULL(MAX(MTG_ROOM_RSVT_SN), 1) + 1 MAX_SN
		FROM MTG_ROOM_RSVT
	</select>

	<!-- 회의실예약정보 저장 -->
	<insert id="retrieveMtgRoomStrgMdfcn" parameterType="map">
		/* humanResourceMngMapper.retrieveMtgRoomStrgMdfcn */
		INSERT INTO MTG_ROOM_RSVT
			VALUES (
			#{mtgRoomRsvtSn}
			,#{mtgRoomCd}
			,#{rsvtEmpId}
			,#{useYmd}
			,#{useBgngHm}
			,#{useEndHm}
			,#{mtgTtl}
			,SYSDATE()
			,#{regEmpId}
			,SYSDATE()
			,#{regEmpId}
		)
		ON DUPLICATE KEY UPDATE
			MTG_ROOM_RSVT_SN	= #{mtgRoomRsvtSn}
			,MTG_ROOM_CD		= #{mtgRoomCd}
			,RSVT_EMP_ID		= #{rsvtEmpId}
			,USE_YMD			= #{useYmd}
			,USE_BGNG_HM		= #{useBgngHm}
			,USE_END_HM			= #{useEndHm}
			,MTG_TTL			= #{mtgTtl}
			,MDFCN_DT			= SYSDATE()
			,MDFCN_EMP_ID		= #{regEmpId}
	</insert>

	<!-- 회의참석자정보 저장 -->
	<insert id="retrieveMtgRoomAtdrnStrgMdfcn" parameterType="map">
		/* humanResourceMngMapper.retrieveMtgRoomAtdrnStrgMdfcn */
		INSERT INTO MTG_ROOM_RSVT_ATDRN
		VALUES (
			#{mtgAtdrnSn}
			,#{mtgRoomRsvtSn}
			,#{atndEmpId}
		)
		ON DUPLICATE KEY UPDATE
			MTG_ATDRN_SN		= #{mtgAtdrnSn}
			,MTG_ROOM_RSVT_SN	= #{mtgRoomRsvtSn}
			,ATND_EMP_ID		= #{atndEmpId}
	</insert>

	<!-- 휴가등록불가능기간 설정 -->
	<update id="updateVcatnCntrlYmdYn" parameterType="map">
		/* humanResourceMngMapper.updateVcatnCntrlYmdYn */
		UPDATE CRTR_DATE
		SET VCATN_CNTRL_YMD_YN = 'Y'
		WHERE CRTR_YMD BETWEEN #{cntrBgngYmd} AND #{cntrEndYmd}
	</update>


	<!-- 휴가배정정보엑셀업로드 -->
	<insert id="insertVcatnMngExcel" parameterType="map">
		/* humanResourceMngMapper.insertVcatnMngExcel */
		INSERT INTO VCATN_MNG
			SELECT CASE
				WHEN (SELECT VCATN_ALTMNT_SN FROM VCATN_MNG WHERE EMP_ID = #{empId} AND VCATN_YR = #{vcatnYr}) IS NOT NULL
					THEN (SELECT VCATN_ALTMNT_SN FROM VCATN_MNG WHERE EMP_ID = #{empId} AND VCATN_YR = #{vcatnYr})
				WHEN (SELECT VCATN_ALTMNT_SN FROM VCATN_MNG WHERE EMP_ID = #{empId} AND VCATN_YR = #{vcatnYr}) IS NULL
					THEN CASE
						WHEN (SELECT MAX(VCATN_ALTMNT_SN) FROM VCATN_MNG WHERE EMP_ID = #{empId}) IS NOT NULL
							THEN (SELECT MAX(VCATN_ALTMNT_SN) + 1 FROM VCATN_MNG WHERE EMP_ID = #{empId})
						WHEN (SELECT MAX(VCATN_ALTMNT_SN) FROM VCATN_MNG WHERE EMP_ID = #{empId}) IS NULL
							THEN 1
					END
			END VCATN_ALTMNT_SN  		/* 휴가배정순번 */
			,#{empId}					/* 직원ID */
			,#{vcatnYr}					/* 휴가연도 */
			<if test='newVcatnYn == "Y" and newVcatnYn.equals("Y")'>
				,0						/* 휴가배정일수 */
				,0						/* 사용일수 */
				,0						/* 공적휴가사용일수 */
				,0						/* 휴가잔여일수 */
				,#{altmntDaycnt}		/* 신규휴가배정일수 */
				,#{useDaycnt}			/* 신규사용일수 */
				,#{remndrDaycnt}		/* 신규잔여일수 */
			</if>
			<if test='newVcatnYn == "N" and newVcatnYn.equals("N")'>
				,#{altmntDaycnt}		/* 휴가배정일수 */
				,#{useDaycnt}			/* 사용일수 */
				,0						/* 공적휴가사용일수 */
				,#{remndrDaycnt}		/* 휴가잔여일수 */
				,0						/* 신규휴가배정일수 */
				,0						/* 신규사용일수 */
				,0						/* 신규잔여일수 */
			</if>
			,#{altmntBgngYmd}			/* 배정시작일자 */
			,#{altmntUseEndYmd}			/* 배정사용종료일자 */
			,SYSDATE()					/* 등록일시 */
			,#{regEmpId}				/* 등록지원ID */
			,SYSDATE()					/* 수정일시 */
			,#{mdfcnEmpId}				/* 수정직원ID */
			,#{newAltmntDdlnYr}			/* 신규배정마감연도 */
			,#{newVcatnYn}				/* 신규휴가여부 */
		ON DUPLICATE KEY UPDATE
			ALTMNT_BGNG_YMD					= #{altmntBgngYmd}		/* 배정시작일자 */
			,ALTMNT_USE_END_YMD				= #{altmntUseEndYmd}	/* 배정사용종료일자 */
			,MDFCN_DT						= SYSDATE()				/* 수정일시 */
			,MDFCN_EMP_ID					= #{mdfcnEmpId}			/* 수정직원ID */
			<if test='newVcatnYn == "Y" and newVcatnYn.equals("Y")'>
				,NEW_VCATN_ALTMNT_DAYCNT	= #{altmntDaycnt}		/* 신규휴가배정일수 */
				,NEW_USE_DAYCNT				= #{useDaycnt}			/* 신규휴가사용일수 */
				,NEW_REMNDR_DAYCNT 			= #{remndrDaycnt}		/* 신규잔여일수 */
			</if>
			<if test='newVcatnYn == "N" and newVcatnYn.equals("N")'>
				,VCATN_ALTMNT_DAYCNT		= #{altmntDaycnt}		/* 휴가배정일수 */
				,USE_DAYCNT					= #{useDaycnt}			/* 휴가사용일수 */
				,VCATN_REMNDR_DAYCNT 		= #{remndrDaycnt}		/* 휴가잔여일수 */
			</if>
	</insert>
	
	
<select id="retrieveUpDept" parameterType="map" resultType="com.trsystem.LowerHashMap">
	SELECT 
    DEPT_ID,
    COALESCE(
        CONCAT(
            ' [부서장 : ', 
            (
                SELECT a.EMP_FLNM
                FROM (
                    SELECT 
                        CONCAT(e.EMP_FLNM, ' ', c.CD_NM) AS EMP_FLNM,
                        ROW_NUMBER() OVER (ORDER BY h.JBTTL_CD) AS RN
                    FROM 
                        EMP e
                    INNER JOIN DEPT_HNF h ON e.EMP_ID = h.EMP_ID
                    JOIN CD c ON e.JBPS_CD = c.CD_VALUE 
                    WHERE 
                        h.DEPT_ID = E.DEPT_ID
                ) a
                WHERE 
                    a.RN = 1
            ),'] - ', DEPT_NM
        ),
        DEPT_NM
    ) AS DEPT_NM_EMP_FLNM -- DEPT_NM과 EMP_FLNM을 합친 컬럼
FROM DEPT E
WHERE 1=1
AND END_YN = 'N';
</select>

</mapper>	
